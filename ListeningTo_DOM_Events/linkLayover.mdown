# Link Layover

### Video Notes

Clicking the show comment link will cause the comments to fade in.
So how do we do that? Here's the solution.

## Preparing for flight
We want to make sure that our `comments` `ul` is hidden when we load the page. This can be achieved with a simple line of css like so

```css
.comments{
    display:none;
}
```
Now that we have our `comments` set to `display:none` we can add the functionality of the click on the show comments link. So when the user clicks on show comments the comments will appear.

We set up the following code which contains our event handler.

```javascript
$(document).ready(function () {
    // fetching the vacation class
    // listening for a click event on the link that has the expand class
    // run our event handler
    $('.vacation').on('click','.expand',function () {
        // find the comments ul
        // show the comments ul
    });
});

```
Now that we have the event handler ready we need to do two things within it.
First we need to find the comments `ul` then second we need to show the comments `ul`.

Finding the comments `ul` is going to require some DOM traversing.

```javascript
$(document).ready(function () {
    $('.vacation').on('click','.expand',function () {
        // finding the comments ul and showing it with fadeToggle
        $(this).closest('.vacation').find('.comments').fadeToggle();
    });
});
```
Now that we have found the `comments` we need to apply the fadeIn method.
There are a few fading jQuery object methods to choose from. `.fadeIn()` `.fadeOut()` `.fadeToggle()`

In our case we want to use `fadeToggle()` which will fade the links in when clicked on and fade them out when clicked on again.

So there seems to be a small issue when we are clicking on our links on the bottom of the page! When we click on a link our entire page skips right up to the top of the web page.

 Why is this? Well here's a good explanation.

## How the Browser Handles the Click.
So here is our link!

```html
<a href='#' class='expand'>Show comments</a>
```
When an event occurs we get a thing called an event bubble. So the click event will start on our link of `.expand` and bubble up to each parent node to let them know a click event happened. Once our bubble has notified all of the parents then it follows the link `#` and goes directly to the top of the page which is the default behavior.

So we need to find a way to prevent the default browser behavior. The first step towards fixing this issue is to add the `event` object inside of our event handler paramater.

```javascript
$(document).ready(function () {
    // the event param into our event handler  
    $('.vacation').on('click','.expand',function (event) {
        // stopPropagation event
        event.stopPropagation();
        // finding the comments ul and showing it with fadeToggle
        $(this).closest('.vacation').find('.comments').fadeToggle();
    });
});
```
`stopPropagation` stops our little annoying bubble from going up to ancestors in the DOM. So the `stopPropagination` method keeps our bubble contained.

However `stopPropagation` dose not stop the default behavior of the page jumping up so `stopPropagation` its not our solution.

Instead we need to call `event.preventDefault()` **to prevent the default behavior** of the browser!

```javascript
$(document).ready(function () {
    // the event param being passed into our event handler  
    $('.vacation').on('click','.expand',function (event) {
        // preventDefault event stopping the default behavior.  
        event.preventDefault();
        // finding the comments ul and showing it with fadeToggle
        $(this).closest('.vacation').find('.comments').fadeToggle();
    });
});
```

So in this case our bubble is going to bubble up but when it reaches to the top of the node list which is our browser and **its not going to follow the default behavior!**  

There will be no more popping up to the top of the web page and our code is all good!

# Exercises
Here is our HTML document for reference

```html
<div id="all-tours" class="links">
    <h1>Guided Tours</h1>
    <ul>
    <li class="tour usa" data-discount="199">
    <h2>New York, New York</h2>
    <span class="details">$1,899 for 7 nights</span>
    <button class="book">Book Now</button>
    <a href="#" class="see-photos">See Photos</a>
        <ul class="photos">
            <li>
                <img src="/assets/photos/paris1.jpg">
                <span>Arc de Triomphe</span>
            </li>
            <li>
                <img src="/assets/photos/paris2.jpg">
                <span>The Eiffel Tower</span>
            </li>
            <li>
                <img src="/assets/photos/paris3.jpg">
                <span>Notre Dame de Paris</span>
            </li>
        </ul>
    </li>
    <li class="tour france" data-discount="99">
        <h2>Paris, France</h2>
        <span class="details">$1,499 for 5 nights</span>
        <button class="book">Book Now</button>
        <a href="#" class="see-photos">See Photos</a>
        <ul class="photos">
            <li>
                <img src="/assets/photos/paris1.jpg">
                <span>Arc de Triomphe</span>
            </li>
            <li>
                <img src="/assets/photos/paris2.jpg">
                <span>The Eiffel Tower</span>
            </li>
            <li>
                <img src="/assets/photos/paris3.jpg">
                <span>Notre Dame de Paris</span>
            </li>
        </ul>
    </li>
        <li class="tour uk" data-discount="149">
            <h2>London, UK</h2>
            <span class="details">$2,199 for 5 nights</span>
            <button class="book">Book Now</button>
            <a href="#" class="see-photos">See Photos</a>
            <ul class="photos">
            <li>
                <img src="/assets/photos/paris1.jpg">
                <span>Arc de Triomphe</span>
            </li>
            <li>
                <img src="/assets/photos/paris2.jpg">
                <span>The Eiffel Tower</span>
            </li>
            <li>
                <img src="/assets/photos/paris3.jpg">
                <span>Notre Dame de Paris</span>
            </li>
            </ul>
        </li>
    </ul>
</div>
```

## 4.18 Link Events 1
Write an event handler that will target all links with a class of `.see-photos` on click.

So we want to create an event handeler that targets every link that has a class of `.see-photos`

Our event handeler is also going to have the click method

```javascript
$(document).ready(function(){
    // Event handeler that will target all links
    // with the class of .see-photos when clicked on
    $('.see-photos').on('click',function(){
        // once the link is clicked show the photos for the clicked tour
    });
});
```
## 4.19 Link Events 2
When this link is clicked, show the photos for the clicked tour by traversing to it using `closest` and `find` then sliding it down by using `slideToggle`.

### Solution
Once our link of `<a href="#" class="see-photos">See Photos</a>` is **clicked**
then we need to show the photos for the clicked tour.

We achieve this by traversing the DOM. First off we need to use the `$(this)` object to reference our event handler. Then we can use the jQuery `closest` method to find the closest element to the images which would be our `li class` of `.photos`.

Then we need to `find` the images and we achieve that by using our jQuery `find` method to find all the photos which live inside the `ul class` of `photos`.

Lastly we need to call the `slideToggle` jQuery method which is going to slide the photos down when we click on our link.


```javascript
// 4.19
$(document).ready(function(){
    // Event handeler that will target all links
    // with the class of .see-photos when clicked on
    $('.see-photos').on('click',function(){
        // once the link is clicked show the photos for the clicked tour
        $(this).closest('.tour').find('.photos').slideToggle();
    });
});
```
## Event Parameter 1
Change your event handler method to take in a link event and prevent the other event handler from being called.

### Solution
So if we remember in our video notes this requires us to add the `event` parameter to our existing event handler.

Once we have added the `event` paramater then we must add the jQuery method of `stopPagination()` to our `event` parameter.

`stopPagination()` will prevent the our parent event handler from being notified that the second event handler exists.

```javascript
$(document).ready(function(){
    // adding a link event parameter
    $('.see-photos').on('click',function(event){
        // stopPropagination prevents any parent handlers from being
        // notified of the event
        event.stopPropagination();
        // once the link is clicked show the photos for the clicked tour
        $(this).closest('.tour').find('.photos').slideToggle();
    });

    // this event should be silenced forever more!
    $('.tour').on('click',function(){
        alert('this must not be called!!');
    });
});
```

## Event Parameter 2
Let's change this so that the browser doesn't jump to the top of the page when the link is clicked as well.

### Solution
So what happens when we click on our link?! Well..Our page just jumps to the top of our browser. That's not what we want.

To fix this issue we need to add the `preventDefault()` method to the `event` object.

Don't remove `stopPropagation()` because this method is preventing our second event handler from being fired! If you go and remove it then the second event will fire and you will recieve an alert message every time you hit a link. 

`event.preventDefault` **prevents the default action of the event** which stops our page from popping up to the top.

```javascript
// 4.21
$(document).ready(function(){
    $('.see-photos').on('click',function(event){
        // preventDefault fixes our page jumping issue
        event.preventDefault();
        // stopPropagation stops our second event from being fired.
        event.stopPropagation();
        $(this).closest('.tour').find('.photos').slideToggle();
    });
    // this event not being fired
    $('.tour').on('click',function(event){
        alert('This should not be called!');
    });
});
```
